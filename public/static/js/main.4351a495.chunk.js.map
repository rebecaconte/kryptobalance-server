{"version":3,"sources":["config.js","components/Graph.js","components/HomePage.js","components/AboutUs.js","components/users/SignIn.js","components/users/SignUp.js","components/dashboard/AddCoin.js","components/dashboard/Graph.js","components/dashboard/PieChart.js","components/dashboard/Dashboard.js","components/users/Profile.js","components/404Page/NotFound.js","components/MyNavbar.js","components/users/EditProfile.js","components/MyFooter.js","App.js","index.js"],"names":["process","Graph","state","coinAmount","dataArr","styles","tooltipWrapper","background","border","tooltip","color","buildGraph","props","graphData","handleAmountGrowth","amountInvested","array","i","length","total","date","Date","toLocaleDateString","push","CoinAmount","Total","setState","this","ResponsiveContainer","height","AreaChart","data","XAxis","dataKey","YAxis","orientation","yAxisId","Tooltip","contentStyle","labelStyle","formatter","value","Area","type","stroke","fillOpacity","fill","activeDot","strokeWidth","Component","HomePage","growth","name","currencyUsed","purchaseDate","graphDataLoaded","amountGrowth","toFixed","handleGrowthName","event","text","target","cloneGrowth","JSON","parse","stringify","handleGrowthAmountInvested","handleGrowthCurrencyUsed","handleGrowthPurchaseDate","showGrowth","console","log","axios","get","config","withCredentials","then","response","prices","catch","e","className","to","alt","src","Col","md","span","offset","Form","Accordion","Row","htmlFor","Control","placeholder","onChange","Card","style","Toggle","onClick","as","Button","variant","eventKey","Collapse","Body","Alert","AboutUs","xs","SignIn","onSignIn","error","onSubmit","Group","controlId","Label","size","required","errorMessage","SignUp","AddCoin","addCoin","handleClose","showHideClassName","show","Modal","Dialog","Header","Title","Footer","coinName","coinPrice","price","eur","dayjs","format","TotalEur","CoinPrice","InvestmentChart","activeIndex","setActiveIndex","colors","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","Sector","d","r","buildPieChart","sumOfCoinValue","onPieEnter","_","index","coinNameArray","PieChart","width","Pie","activeShape","onMouseEnter","map","entry","Cell","Dashboard","showModal","coinImageArray","hideModal","postCoinPurchaseHistory","preventDefault","newCoinPurchase","user","post","getCoinGraphData","a","_id","coinArray","forEach","coin","includes","image","onDelete","defaultActiveKey","block","Container","Profile","Image","rounded","defaultValue","currency","href","NotFound","MyNavbar","onLogout","Navbar","bg","Brand","Nav","NavDropdown","title","id","Item","Divider","EditProfile","onEdit","files","formData","FormData","append","updateUser","err","handleNameChange","cloneUser","handleCurrencyChange","File","handleImageChange","accept","ButtonGroup","aria-label","MyFooter","App","fetchingUser","dateOfPurchase","handleDelete","delete","history","handleSignUp","email","username","password","newUser","errorObj","handleSignIn","handleLogout","onSignin","exact","path","render","routeProps","component","withRouter","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4351a495.chunk.js","sourcesContent":["export default {\n\tAPI_URL: process.env.REACT_APP_SERVER_URL\n}","import React, { Component } from 'react'\nimport { AreaChart, Area, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\n\nclass Graph extends Component {\n\n  // GRAPH FOR THE HOME PAGE\n\n  state = {\n    coinAmount: 0,\n    dataArr: null,\n\n    styles: {\n      tooltipWrapper: {\n        background: \"#444444\",\n        border: \"none\"\n\n      },\n      tooltip: {\n        color: \"#ebebeb\"\n      }\n    }\n  }\n\n  buildGraph = () => {\n    const { graphData, handleAmountGrowth } = this.props\n    \n    const coinAmount = graphData.amountInvested / graphData[0][1];\n    let array = [];\n\n    for (let i = 0; i < graphData.length; i++) {\n      \n      const coinPrice = graphData[i][1];\n      const total = coinAmount * coinPrice;\n      const date = new Date(graphData[i][0]).toLocaleDateString(\"en-US\");\n\n      array.push({\n        CoinAmount: coinAmount,\n        Total: total,\n        date: date\n      });    \n    }\n\n    this.setState({\n      dataArr: array\n    })\n\n    handleAmountGrowth(array[array.length - 1].Total)\n  }\n\n  componentDidMount() {\n      this.buildGraph();\n  }\n\n  render() {\n    const { styles, dataArr } = this.state\n\n    if(!dataArr) {\n      return <p>Loading Graph . . . </p>\n    }\n\n    return (\n      <div>\n        <ResponsiveContainer height={250}>\n          <AreaChart data={dataArr}>\n            <XAxis dataKey={\"date\"} />\n            <YAxis orientation={\"left\"}  />\n            <YAxis yAxisId=\"right\" orientation=\"right\" />\n\n            <Tooltip\n              contentStyle={styles.tooltipWrapper}\n              labelStyle={styles.tooltip}\n              formatter={value => `${value}`}\n            />\n            <Area\n              type=\"linear\"\n              dataKey=\"CoinAmount\"\n              stroke=\"none\"\n              fillOpacity={0.6}\n              fill=\"#f5e942\"\n              yAxisId=\"right\"\n              activeDot={{ strokeWidth: 0 }}\n            />  \n            <Area\n              type=\"linear\"\n              dataKey=\"Total\"\n              stroke=\"none\"\n              fillOpacity={0.8}\n              fill=\"#b342f5\"\n              activeDot={{ strokeWidth: 0 }}\n            />  \n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    )\n  }\n}\n\n\nexport default Graph\n","import React, { Component } from 'react';\nimport { Alert, Form, Row, Col, Card, Accordion, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport config from '../config';\nimport Graph from './Graph'\n\n\nclass HomePage extends Component {\n\n    state = {\n        growth: {\n            name: '',\n            amountInvested: '',\n            currencyUsed: '',\n            purchaseDate: ''\n        },\n        graphData: [],\n        graphDataLoaded: false,\n        amountGrowth: 0\n    }\n\n    //to display the growth since purchase in the users preferred currency \n    handleAmountGrowth = (growth) => {\n        growth = growth.toFixed(2)\n\n        this.setState({\n            amountGrowth: growth\n        })\n    }\n\n    //grab from the form info about the name of coin invested\n    handleGrowthName = (event) => {\n        let text = event.target.value\n        let cloneGrowth = JSON.parse(JSON.stringify(this.state.growth))\n        cloneGrowth.name = text\n\n        this.setState({\n            growth: cloneGrowth\n        })\n    }\n\n    //grab from the form info about the amount invested\n    handleGrowthAmountInvested = (event) => {\n        let text = event.target.value\n        let cloneGrowth = JSON.parse(JSON.stringify(this.state.growth))\n        cloneGrowth.amountInvested = text\n\n        this.setState({\n            growth: cloneGrowth\n        })\n    }\n\n    //grab from the form info about the currency used\n    handleGrowthCurrencyUsed = (event) => {\n        let text = event.target.value\n        let cloneGrowth = JSON.parse(JSON.stringify(this.state.growth))\n        cloneGrowth.currencyUsed = text\n\n        this.setState({\n            growth: cloneGrowth\n        })\n    }\n\n    //grab from the form info about the purchase date\n    handleGrowthPurchaseDate = (event) => {\n        let text = event.target.value\n        let cloneGrowth = JSON.parse(JSON.stringify(this.state.growth))\n        cloneGrowth.purchaseDate = text\n\n        this.setState({\n            growth: cloneGrowth\n        })\n    }\n\n    //display info in the main graph \n    showGrowth = (growth) => {\n        console.log(growth);\n        const { name, currencyUsed, purchaseDate, amountInvested } = growth\n\n        axios.get(`${config.API_URL}/api/coin/growth/${name}/${currencyUsed}/${purchaseDate}`, {}, { withCredentials: true })\n            .then((response) => {\n                //console.log(response);\n                response.data.data.data.prices.amountInvested = amountInvested;\n\n                this.setState({\n                    graphData: response.data.data.data.prices,\n                    graphDataLoaded: true\n                })\n            })\n            .catch((e) => {\n                console.log(e)\n            })\n    }\n\n\n    render() {\n        const { graphData, amountGrowth } = this.state\n        const graphDataLoaded = this.state.graphDataLoaded\n\n        return (\n            <div>\n                <div className=\"homePageTop\" >\n                    <div className=\"linksHomePage \">\n                        <Link className=\"spaceLinks\" to=\"/signin\">Sign in</Link>\n                        <div className=\"spaceLinks\"> | </div>\n                        <Link className=\"spaceLinks\" to=\"/signup\">Sign up</Link>\n                    </div>\n                </div>\n\n                <div >\n                    <div className=\"logoHomePage\">\n                        <Link to=\"/\"><img className=\"logoHPage\" alt=\"logo\" src=\"./logokbalance.png\" /></Link>\n                    </div>\n                </div>\n\n                <Col className=\"middleSpaceHP\" md={{ span: 3, offset: 3 }}></Col>\n\n                <Col md={{ span: 6, offset: 3 }}>\n                    <Form >\n                        <Accordion >\n                            <Row className=\"homePageAcordeon\">\n                                <Col>\n                                    <label htmlFor=\"name\">CryptoCurrency Name:</label>\n                                    <Form.Control placeholder=\"'bitcoin'\" onChange={this.handleGrowthName} value={this.state.growth.name} />\n                                </Col>\n                                <Col>\n                                    <label htmlFor=\"name\">Amount Invested:</label>\n                                    <Form.Control placeholder=\" '2000' \" onChange={this.handleGrowthAmountInvested} value={this.state.growth.amountInvested} />\n                                </Col>\n                                <Col>\n                                    <label htmlFor=\"name\">Date of Investment:</label>\n                                    <Form.Control placeholder=\"'10-03-2016'\" onChange={this.handleGrowthPurchaseDate} value={this.state.growth.purchaseDate} />\n                                </Col>\n\n                                <Col>\n                                    <label htmlFor=\"name\">Currency Used:</label>\n                                    <Form.Control placeholder=\"'eur'\" onChange={this.handleGrowthCurrencyUsed} value={this.state.growth.currencyUsed} />\n                                </Col>\n                                <Col>\n                                    <Card style={{ \"width\": \"60px\" }}>\n                                        <Accordion.Toggle onClick={() => { this.showGrowth(this.state.growth) }} as={Button} variant=\"light\" eventKey=\"0\">\n                                            ▶\n                                        </Accordion.Toggle>\n                                    </Card>\n                                </Col>\n\n                                <Accordion.Collapse eventKey=\"0\">\n                                    <Card.Body>\n\n                                        <Col>\n                                            <p className=\"textValue\">Today's Value:</p>\n                                            {\n                                                amountGrowth > 0 ?\n                                                    <Col>\n                                                        {amountGrowth}\n                                                    </Col>\n                                                    :\n                                                    <div></div>\n                                            }\n                                        </Col>\n\n                                        <Col>\n                                            {\n                                                graphDataLoaded ?\n                                                    <div>\n                                                        <Graph graphData={graphData} handleAmountGrowth={this.handleAmountGrowth} />\n                                                    </div>\n                                                    :\n                                                    <div></div>\n                                            }\n                                        </Col>\n\n                                        <div className=\"alertMessage\" style={{ \"width\": \"300px\", \"align\": \"center\" }}>\n                                            <Alert variant=\"success\">\n                                                <p>Hey, nice to see you here!</p>\n                                                <p >\n                                                    How about keeping track of ALL your investments in cryptocurrency?\n                                                    <br></br>\n                                                    Create an account today!\n                                                </p>\n                                                <hr />\n                                                <p className=\"mb-0\">\n                                                    <Link to=\"/signup\">Sign Up</Link>\n                                                </p>\n                                            </Alert>\n                                        </div>\n                                    </Card.Body>\n                                </Accordion.Collapse>\n                            </Row>\n                        </Accordion>\n                    </Form>\n                </Col>\n            </div>\n        )\n    }\n}\n\n\nexport default HomePage","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col } from 'react-bootstrap';\n\n\nclass AboutUs extends Component {\n    render() {\n        return (\n            <div  >\n                <Col className=\"aboutPage\" >\n\n                    <div className=\"aboutPageFirst\">\n                        <div className=\"linksAboutPage \">\n                            <Link className=\"spaceLinks\" to=\"/signin\">Sign in</Link>\n                            <div className=\"spaceLinks\"> | </div>\n                            <Link className=\"spaceLinks\" to=\"/signup\">Sign up</Link>\n                        </div>\n                    </div>\n\n                    <div className=\"aboutPage\">\n                        <div className=\"logoAboutPage\">\n                            <Link to=\"/\"><img className=\"logoAPage\" alt=\"logo\" src=\"./logokbalance.png\" /></Link>\n                        </div>\n                    </div>\n\n                    <Col xs={2} md={10} className=\"textAboutPage\">\n                        <div className=\"infoAboutUs\" >\n                            <h2>About us:</h2>\n                            <p>KryptoBalance is an app that allows users to create the perfect environment to keep track of their investments in crypto currency. The available tools such as graphics, conversions, history and alerts simplifies and connects all information in one single board.</p>\n\n                            <p>The user has right in hand all the needed information of all his investments in one place.</p>\n                        </div>\n\n                        <div className=\"infoAboutUs\">\n                            <h2>Contact us:</h2>\n                            <p> Keep in touch! Write us an email with doubts, suggestions. Anything! </p>\n                            <p>kryptobalanceproject@gmail.com</p>\n                        </div>\n                    </Col>\n\n                    <Row>\n                        {/*social media icons*/}\n                    </Row>\n                </Col>\n            </div>\n        )\n    }\n}\n\n\nexport default AboutUs","import React, { Component } from 'react'\nimport { Form, Col, Button } from 'react-bootstrap';\n\nclass SignIn extends Component {\n    render() {\n        const { onSignIn, error } = this.props\n\n        return (\n            <Col className=\"formContainer signInForm\">\n                <div>\n                    <img className=\"logoSign\" alt=\"logo\" src=\"./logokbalance.png\" />\n                </div>\n\n\n                <Form className=\"formInput\" onSubmit={onSignIn}>\n                    <Form.Group controlId=\"\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control style={{ \"fontSize\": \"25px\" }} size=\"lg\" required type=\"email\" name=\"email\" placeholder=\"Enter email\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control size=\"lg\" required type=\"password\" name=\"password\" placeholder=\"Password\" />\n                    </Form.Group>\n                    <Button variant=\"outline-dark\" className=\"submitButton\" type=\"submit\" >Sign In</Button>\n                </Form>\n\n                {\n                    error ?\n                        <Col>\n                            {error.errorMessage}\n                        </Col>\n                        :\n                        <div></div>\n                }\n\n            </Col>\n        )\n    }\n}\n\n\nexport default SignIn;","import React, { Component } from 'react';\nimport { Form, Col, Button } from 'react-bootstrap';\n\nclass SignUp extends Component {\n\n    render() {\n\n        const { onSubmit, error } = this.props\n\n        return (\n            <Col className=\"formContainer signInForm\">\n\n                <div >\n                    <img className=\"logoSign\" alt=\"logo\" src=\"./logokbalance.png\" />\n                </div>\n\n                <Form className=\"formInput\" onSubmit={onSubmit}>\n                    <Form.Group className=\"formSign\" controlId=\"\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control size=\"lg\" required type=\"email\" name=\"email\" placeholder=\"Enter email\" />\n                    </Form.Group>\n\n                    <Form.Group className=\"formSign\" controlId=\"\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control size=\"lg\" required type=\"text\" name=\"username\" placeholder=\"Enter username\" />\n                    </Form.Group>\n\n                    <Form.Group className=\"formSign\" controlId=\"\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control size=\"lg\" required type=\"password\" name=\"password\" placeholder=\"Password\" />\n                    </Form.Group>\n                    <Button variant=\"outline-dark\" className=\"submitButton\" type=\"submit\">Submit</Button>\n                </Form>\n\n                {\n                    error ?\n                        <Col>\n                            {error.errorMessage}\n                        </Col>\n                        :\n                        <div></div>\n                }\n\n            </Col>\n        )\n    }\n}\n\n\nexport default SignUp","import React, { Component } from 'react';\nimport { Modal, Button, Form, } from 'react-bootstrap';\nimport './AddCoin.css';\n\nclass AddCoin extends Component {\n\n  render() {\n    const { addCoin, handleClose, show } = this.props\n\n    const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n\n    return (\n      <div className={showHideClassName}>\n        <section className=\"modal-main\">\n          <form onSubmit={addCoin}>\n\n            <Modal.Dialog>\n              <Modal.Header className=\"modalTitle\">\n                <Modal.Title>Add Coins!  </Modal.Title>\n                <Modal.Title> 💰 </Modal.Title>\n              </Modal.Header>\n\n              <Modal.Body className=\"modalTitle\" >\n\n                <Form.Group >\n                  <label  htmlFor=\"name\">CryptoCurrency Name:</label>\n                  <Form.Control className=\"modalInput\" name=\"name\" size=\"sm\" type=\"text\" placeholder=\" 'bitcoin' \" />\n                </Form.Group>\n\n                <Form.Group className=\"modalText\">\n                  <label className=\"modalTitle\" htmlFor=\"purchaseDate\">Date of Purchase:</label>\n                  <Form.Control className=\"modalInput\" name=\"purchaseDate\" size=\"sm\" type=\"text\" placeholder=\"'10-03-2017'\" />\n                </Form.Group>\n\n                <Form.Group className=\"modalText\">\n                  <label className=\"modalTitle\" htmlFor=\"amountInvested\">Amount of Money Invested:</label>\n                  <Form.Control  className=\"modalInput\" name=\"amountInvested\" size=\"sm\" type=\"text\" placeholder=\" '400'\" />\n                </Form.Group>\n\n                <Form.Group className=\"modalText\">\n                  <label className=\"modalTitle\" htmlFor=\"currencyUsed\">Currency Used:</label>\n                  <Form.Control  className=\"modalInput\" name=\"currencyUsed\" size=\"sm\" type=\"text\" placeholder=\" 'eur' \" />\n                </Form.Group>\n\n                <p className=\"modalText text-muted\"> Note: Please insert a second purchase or a simulation of '0' in today's date for the Graphic comparison!</p>\n\n              </Modal.Body>\n\n              <Modal.Footer >\n                \n                <Button type=\"button\" onClick={handleClose} variant=\"secondary\">Close</Button>\n                <Button type=\"submit\"  onClick={handleClose} variant=\"primary\">Submit</Button>\n              </Modal.Footer>\n            </Modal.Dialog>\n\n          </form>\n\n        </section>\n      </div>\n    )\n  }\n}\n\n\n\nexport default AddCoin;\n","import React, { Component } from 'react';\nimport dayjs from \"dayjs\";\nimport { AreaChart, Area, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\n\nclass Graph extends Component {\n\n   // GRAPH FOR THE DASHBOARD\n\n  state = {\n    coinAmount: 0,\n    // totalInvested: 0,\n    dataArr: [],\n\n    styles: {\n      tooltipWrapper: {\n        background: \"#444444\",\n        border: \"none\"\n\n      },\n      tooltip: {\n        color: \"#ebebeb\"\n      }\n    }\n  }\n\n  //graph of each currency\n  buildGraph = () => {\n    const { graphData, coinName } = this.props\n\n    let coinAmount = 0;\n    // let totalInvested = 0;\n    let array = [];\n\n    // If data on the database contains any coin purchase dates\n    if (graphData.length) {\n\n      // Loop through all coin purchase dates ex: 20-09-2021, 21-09-2021, 22-09-2021 etc.\n      for (let i = 0; i < graphData.length; i++) {\n\n        //check if there's any coin available with the same name\n        if (graphData[i].name === coinName) {\n          // Get coin price of that specific purchase date in euro\n          const coinPrice = graphData[i].price.eur;\n          // Add the amount invested ex: 200 euros and divide it by the coin price (.52 cent per coin) of that specific date in euro\n          // return the total coin amount that you own in crypto currency ex: 384.615 coins\n          coinAmount += graphData[i].amountInvested / coinPrice;\n          // Total invested ex: 20-09-2021 -> 200 euro 21-09-2021 -> 200 euro = 400 euro etc.\n          //totalInvested += graphData[i].amountInvested;\n\n          // total amount of money worth of coins accumulates in each purchase date\n          const total = coinAmount * coinPrice;\n          const date = dayjs(graphData[i].purchaseDate).format(\"MM/DD/YYYY\");\n\n          array.push({\n            CoinAmount: coinAmount,\n            TotalEur: total,\n            CoinPrice: coinPrice,\n            date: date\n          });\n        }\n      }\n\n      this.setState({\n        dataArr: array,\n        graphDataLoaded: true,\n        coinAmount: coinAmount\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.buildGraph();\n  }\n\n  render() {\n    const { styles, dataArr } = this.state\n\n    if (!dataArr) {\n      return <p>Loading Graph . . . </p>\n    }\n\n    return (\n      <div>\n        <ResponsiveContainer height={250}>\n          <AreaChart data={dataArr}>\n            <XAxis dataKey={\"date\"} />\n            <YAxis orientation={\"left\"} />\n            <YAxis yAxisId=\"right\" orientation=\"right\" />\n\n            <Tooltip\n              contentStyle={styles.tooltipWrapper}\n              labelStyle={styles.tooltip}\n              formatter={value => `${value}`}\n            />\n            <Area\n              type=\"linear\"\n              dataKey=\"CoinAmount\"\n              stroke=\"none\"\n              fillOpacity={0.4}\n              fill=\"#55efc4\"\n              yAxisId=\"right\"\n              activeDot={{ strokeWidth: 0 }}\n            />\n            <Area\n              type=\"linear\"\n              dataKey=\"TotalEur\"\n              stroke=\"none\"\n              fillOpacity={0.3}\n              fill=\"#f7931a\"\n              activeDot={{ strokeWidth: 0 }}\n            />\n            <Area\n              type=\"linear\"\n              dataKey=\"CoinPrice\"\n              stroke=\"none\"\n              fillOpacity={0.6}\n              fill=\"#e84393\"\n              activeDot={{ strokeWidth: 0 }}\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    )\n  }\n}\n\n\nexport default Graph","import React, { Component } from \"react\";\nimport { PieChart, Pie, Cell, Sector } from \"recharts\";\n\n\nclass InvestmentChart extends Component {\n\n  state = {\n    data: [],\n    activeIndex: 0,\n    setActiveIndex: 0,\n    colors: [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"]\n  }\n\n  renderActiveShape = (props: any) => {\n    const RADIAN = Math.PI / 180;\n    const {\n      cx,\n      cy,\n      midAngle,\n      innerRadius,\n      outerRadius,\n      startAngle,\n      endAngle,\n      fill,\n      payload,\n      percent,\n      value\n    } = props;\n    const sin = Math.sin(-RADIAN * midAngle);\n    const cos = Math.cos(-RADIAN * midAngle);\n    const sx = cx + (outerRadius + 10) * cos;\n    const sy = cy + (outerRadius + 10) * sin;\n    const mx = cx + (outerRadius + 30) * cos;\n    const my = cy + (outerRadius + 30) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n    const ey = my;\n    const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n    return (\n      <g>\n        <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n          {payload.name}\n        </text>\n        <Sector\n          cx={cx}\n          cy={cy}\n          innerRadius={innerRadius}\n          outerRadius={outerRadius}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          fill={fill}\n        />\n        <Sector\n          cx={cx}\n          cy={cy}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          innerRadius={outerRadius + 6}\n          outerRadius={outerRadius + 10}\n          fill={fill}\n        />\n        <path\n          d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n          stroke={fill}\n          fill=\"none\"\n        />\n        <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n        <text\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\n          y={ey}\n          textAnchor={textAnchor}\n          fill=\"#000\"\n        >{`CoinValueEuro ${value.toFixed(2)} €`}</text>\n        <text\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\n          y={ey}\n          dy={18}\n          textAnchor={textAnchor}\n          fill=\"#999\"\n        >\n          {`(Percentage ${(percent * 100).toFixed(2)}%)`}\n        </text>\n      </g>\n    );\n  };\n\n  //grab info from the DB\n  buildPieChart = (array, graphData, coinName) => {\n    let sumOfCoinValue = 0;\n    let coinPrice = 0;\n    let coinAmount = 0;\n\n    //compare equal coin names and sum the amount invested \n    for (let i = 0; i < graphData.length; i++) { \n      if(graphData[i].name === coinName) {\n         // Get coin price of that specific purchase date in euro\n         coinPrice = graphData[i].price.eur;\n         // Add the amount invested ex: 200 euros and divide it by the coin price (.52 cent per coin) of that specific date in euro\n         // return the total coin amount that you own in crypto currency ex: 384.615 coins\n         coinAmount += graphData[i].amountInvested / coinPrice;\n         // total amount of money worth of coins accumulates in each purchase date\n         sumOfCoinValue = coinAmount * coinPrice;\n      }\n    }\n\n    // Pushing coin value to pie chart\n    array.push({ name: coinName, value: sumOfCoinValue })\n\n    this.setState({\n      data: array\n    })\n  }\n\n  onPieEnter = (_, index) => {\n    this.setState({\n      activeIndex: index\n    });\n  };\n\n  componentDidMount() {\n    const { graphData, coinNameArray } = this.props\n    console.log(graphData);\n    let array = [];\n\n    //extract the info of each coin to later on add the amountInvested\n    for(let i = 0; i < coinNameArray.length; i++) {\n      this.buildPieChart(array, graphData, coinNameArray[i]);\n    }\n    \n  }\n\n  render() {\n\n    return (\n      <PieChart width={400} height={400}>\n        <Pie\n          activeIndex={this.state.activeIndex}\n          activeShape={this.renderActiveShape}\n          data={this.state.data}\n          cx={200}\n          cy={200}\n          innerRadius={60}\n          outerRadius={80}\n          fill=\"#000\"\n          dataKey=\"value\"\n          onMouseEnter={this.onPieEnter}\n        >\n          {this.state.data.map((entry, index) => (\n            <Cell fill={this.state.colors[index % this.state.colors.length]} />\n          ))}\n        </Pie>\n      </PieChart>\n    );\n  }\n}\n\nexport default InvestmentChart","import React, { Component } from 'react';\nimport axios from 'axios';\nimport config from '../../config';\nimport AddCoin from './AddCoin';\nimport Graph from './Graph';\nimport PieChart from './PieChart';\nimport { Card, Accordion, Container, Button } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n\n  state = {\n    showModal: false,\n    graphData: [],\n    dataArr: [],\n    coinNameArray: [],\n    coinImageArray: [],\n    graphDataLoaded: false,\n    coinAmount: 0,\n    coinName: ''\n  }\n\n  showModal = () => {\n    this.setState({ show: true });\n  };\n\n  hideModal = () => {\n    this.setState({ show: false });\n  };\n\n  postCoinPurchaseHistory = (e) => {\n    e.preventDefault()\n    const { name, purchaseDate, amountInvested, currencyUsed } = e.target\n\n    let newCoinPurchase = {\n      name: name.value,\n      purchaseDate: purchaseDate.value,\n      amountInvested: amountInvested.value,\n      currencyUsed: currencyUsed.value,\n      user: this.props.user\n    }\n\n    // add coin info in the DB\n    axios.post(`${config.API_URL}/api/coin/add`, newCoinPurchase)\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((e) => {\n        console.log('Adding coin failed:', e)\n      })\n  }\n\n  //get all purchase history to display in the graph\n  getCoinGraphData = async () => {\n    const { user } = this.props\n\n    axios.get(`${config.API_URL}/api/coin/${user._id}/history/all`)\n      .then((response) => {\n\n        if (response.data.length) {\n\n          this.setState({\n            graphData: response.data\n          })\n\n          let coinArray = [];\n          let coinImageArray = [];\n\n          //separate it by the coin name\n          this.state.graphData.forEach(coin => {\n            if (!coinArray.includes(coin.name)) {\n              coinArray.push(coin.name);\n            }\n          })\n\n          //show the coin image\n          this.state.graphData.forEach(coin => {\n            if (!coinImageArray.includes(coin.image)) {\n              coinImageArray.push(coin.image);\n            }\n          })\n\n          this.setState({\n            coinNameArray: coinArray,\n            coinImageArray: coinImageArray,\n            graphDataLoaded: true\n          });\n        }\n\n      })\n      .catch((e) => {\n        console.log(\"Error during getCoinGraphData: \", e);\n      })\n  };\n\n  componentDidMount() {\n    this.getCoinGraphData()\n  }\n\n  render() {\n\n    const { graphData, coinNameArray, coinImageArray } = this.state\n    const graphDataLoaded = this.state.graphDataLoaded\n    const { user, onDelete } = this.props\n\n    if (!user) {\n      return <Redirect to={'/signin'} />\n    }\n\n    return (\n      <div>\n        <div className=\"firstLevelDashboard\">\n          <div className=\"dashboardAccordeon\">\n            <Accordion defaultActiveKey=\"0\">\n              <Card>\n                {/* SLOT 1 */}\n                {\n                  graphDataLoaded && graphData[0] && coinNameArray[0] ?\n                    <div>\n                      <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                        <div>\n                          <img src={coinImageArray[0]} alt={graphData[0].name} /> {coinNameArray[0]}\n                        </div>\n\n                      </Accordion.Toggle>\n\n                      <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body>\n                          <div>\n                            <Graph graphData={graphData} coinName={coinNameArray[0]} />\n\n                            <button onClick={() => { onDelete(coinNameArray[0]) }} >Delete</button>\n                          </div>\n                        </Card.Body>\n                      </Accordion.Collapse>\n                    </div>\n                    :\n                    <div></div>\n                }\n                {/* SLOT 2 */}\n                {\n                  graphDataLoaded && graphData[1] && coinNameArray[1] ?\n                    <div>\n                      <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                        <div>\n                          <img src={coinImageArray[1]} alt={graphData[1].name} /> {coinNameArray[1]}\n                        </div>\n\n                      </Accordion.Toggle>\n\n                      <Accordion.Collapse eventKey=\"1\">\n                        <Card.Body>\n                          <div>\n                            <Graph graphData={graphData} coinName={coinNameArray[1]} />\n\n                            <button onClick={() => { onDelete(coinNameArray[1]) }} >Delete</button>\n                          </div>\n                        </Card.Body>\n                      </Accordion.Collapse>\n                    </div>\n                    :\n                    <div></div>\n                }\n                {/* SLOT 3 */}\n                {\n                  graphDataLoaded && graphData[2] && coinNameArray[2] ?\n                    <div>\n                      <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n                        <div>\n                          <img src={coinImageArray[2]} alt={graphData[2].name} /> {coinNameArray[2]}\n                        </div>\n\n                      </Accordion.Toggle>\n\n                      <Accordion.Collapse eventKey=\"2\">\n                        <Card.Body>\n                          <div>\n                            <Graph graphData={graphData} coinName={coinNameArray[2]} />\n\n                            <button onClick={() => { onDelete(coinNameArray[2]) }} >Delete</button>\n                          </div>\n                        </Card.Body>\n                      </Accordion.Collapse>\n                    </div>\n                    :\n                    <div></div>\n                }\n                {/* SLOT 4 */}\n                {\n                  graphDataLoaded && graphData[3] && coinNameArray[3] ?\n                    <div>\n                      <Accordion.Toggle as={Card.Header} eventKey=\"3\">\n                        <div>\n                          <img src={coinImageArray[3]} alt={graphData[3].name} /> {coinNameArray[3]}\n                        </div>\n\n                      </Accordion.Toggle>\n\n                      <Accordion.Collapse eventKey=\"3\">\n                        <Card.Body>\n                          <div>\n                            <Graph graphData={graphData} coinName={coinNameArray[3]} />\n\n                            <button onClick={() => { onDelete(coinNameArray[3]) }} >Delete</button>\n                          </div>\n                        </Card.Body>\n                      </Accordion.Collapse>\n                    </div>\n                    :\n                    <div></div>\n                }\n                {/* SLOT 5 */}\n                {\n                  graphDataLoaded && graphData[4] && coinNameArray[4] ?\n                    <div>\n                      <Accordion.Toggle as={Card.Header} eventKey=\"4\">\n                        <div>\n                          <img src={coinImageArray[4]} alt={graphData[4].name} /> {coinNameArray[4]}\n                        </div>\n\n                      </Accordion.Toggle>\n\n                      <Accordion.Collapse eventKey=\"4\">\n                        <Card.Body>\n                          <div>\n                            <Graph graphData={graphData} coinName={coinNameArray[4]} />\n\n                            <button onClick={() => { onDelete(coinNameArray[4]) }} >Delete</button>\n                          </div>\n                        </Card.Body>\n                      </Accordion.Collapse>\n                    </div>\n                    :\n                    <div></div>\n                }\n              </Card>\n            </Accordion>\n\n            {/* ADD COIN */}\n\n            <div>\n              <button type=\"button\" onClick={this.showModal}>\n                +Coin\n              </button>\n            </div>\n\n            <>\n              <Button variant=\"primary\" size=\"lg\" block>\n                <AddCoin addCoin={this.postCoinPurchaseHistory} show={this.state.show} handleClose={this.hideModal} />\n\n              </Button>\n            </>\n\n\n          </div>\n            <div className=\"pieChart\">\n              {/* PIE CHART */}\n              {\n                graphDataLoaded && graphData.length && coinNameArray.length ?\n                  <Container>\n                    <p>Distribuition of Investment:</p>\n\n                    <div className=\"totalInvGraph\">\n                      <PieChart graphData={graphData} coinNameArray={coinNameArray} />\n                    </div>\n\n\n                  </Container>\n                  : <div></div>\n              }\n            </div>\n          </div>\n\n      </div >\n    )\n  }\n}\n\n\nexport default Dashboard;","import React, { Component } from 'react';\nimport { Row, Col, Button, Container, Image, Form } from 'react-bootstrap';\nimport { Link, Redirect } from 'react-router-dom';\n\n\n\nclass Profile extends Component {\n\n    render() {\n\n        const { user } = this.props\n\n        if (!user) {\n            return <Redirect to={'/signin'} />\n        }\n\n        return (\n            <div>\n                <Container className=\"formContainer\">\n\n                    <div>\n                        <div className=\"\">\n\n                            <Row className=\"formContainer\">\n                                <Col xs={6} md={4}>\n                                    {\n                                        user.image ?\n                                            <div>\n                                                <img className=\"profileImage\" src={user.image} alt={user.name} />\n                                            </div>\n                                            :\n                                            <Image className=\"profileImage\" src=\"../logokbalance.png\" rounded />\n                                    }\n                                </Col>\n                                <div className=\" editIcon\">\n                                    <Button variant=\"\"><Link className=\" editIcon\" to=\"/profile/edit\" user={user}> edit ✎</Link> </Button>\n                                </div>\n                            </Row>\n\n                        </div>\n\n                        <Form.Group className=\"formInput\" controlId=\"formGroupEmail\">\n                            <Form.Label>Username:</Form.Label>\n                            <Form.Control type=\"text\" value={user.name} placeholder=\"Enter username\" />\n                        </Form.Group>\n\n                        <Form.Group className=\"formInput\" as={Col} controlId=\"formGridState\">\n                            <Form.Label>Currency:</Form.Label>\n                            <Form.Control as=\"text\" defaultValue={user.currency}>\n                                <option>euro</option>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <div>\n                            <Button className=\"formInput\" href=\"/dashboard\" className=\"buttonProfile\" variant=\"secondary\" size=\"lg\" >\n                                My Dashboard\n                            </Button>\n                        </div>\n                    </div>\n                </Container>\n            </div>\n        )\n    }\n}\n\n\nexport default Profile;","import React, { Component } from 'react'\n\nclass NotFound extends Component {\n   render() {\n      return (\n         <div>\n            <img src=\"/404BG.png\" />\n            <img src=\"/mario.png\" />\n            <h1> 404 PAGE NOT FOUND</h1>\n            <h3>Uh oh.. seems like our code went down the tubes.. Mario can lead your way out! </h3>\n            <h3> ⬅ &#10145;  </h3>\n         </div>\n      )\n   }\n}\n\n\nexport default NotFound;","import React, { Component } from 'react';\nimport { Navbar, Nav, NavDropdown, Image } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n\nclass MyNavbar extends Component {\n\n    render() {\n\n        const { user, onLogout } = this.props;\n\n        if (user) {\n            return (\n                <div>\n                    <Navbar bg=\"dark\" variant=\"dark\">\n                        <Navbar.Brand> <Link className=\"navbar-home-link\" to=\"/\">KryptoBalance </Link> </Navbar.Brand>\n                        <Nav>\n\n                            <Navbar.Brand >Hello, {user.name}! </Navbar.Brand>\n\n                            <NavDropdown title=\"\" id=\"dropdown-menu-align-left\">\n                                <NavDropdown.Item className=\"linksDropDown\"><Link className=\"linksDropDown\" to=\"/profile\" user={user}>Profile</Link></NavDropdown.Item>\n                                <NavDropdown.Item className=\"linksDropDown\"><Link className=\"linksDropDown\" to=\"/dashboard\" user={user}>Dashboard</Link></NavDropdown.Item>\n                                <NavDropdown.Item className=\"linksDropDown\" ><Link className=\"linksDropDown\" to=\"/about\">Contact </Link></NavDropdown.Item>\n                                <NavDropdown.Divider />\n                                <button onClick={onLogout}>Logout</button>\n                            </NavDropdown>\n                            {\n                                user.image ?\n                                    <div>\n                                        <img className=\"nav-profile-img\" alt=\"user-avatar\" src={user.image} alt={user.name} />\n                                    </div>\n                                    :\n                                    <Image className=\"nav-profile-img\" alt=\"user-avatar\" src=\"../logokbalance.png\" rounded />\n                            }\n                        </Nav>\n                    </Navbar>\n                </div >\n            )\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default MyNavbar;","import React, { Component } from 'react';\nimport { Form, Col, Button, Container, ButtonGroup, Row, Image } from 'react-bootstrap';\nimport { Redirect, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport config from '../../config';\n\nclass EditProfile extends Component {\n\n\n    state = {\n        user: {}\n    }\n\n    onEdit = (e) => {\n        console.log(e);\n        e.preventDefault()\n        // update image\n        let image = e.target.image.files[0]\n        let formData = new FormData()\n        formData.append('image', image)\n\n        axios.post(`${config.API_URL}/api/upload`, formData, { withCredentials: true })\n            .then((response) => {\n                this.state.user.image = response.data\n                this.props.updateUser(this.state.user)\n            })\n            .catch((e) => {\n                console.log('Upload Failed', e)\n            })\n\n        console.log(this.state.user);\n\n\n        //update name\n        axios.post(`${config.API_URL}/api/profile/edit`, {\n            name: this.state.user.name,\n            currency: this.state.user.currency,\n        }, { withCredentials: true })\n            .then((response) => {\n                this.props.updateUser(response.data)\n\n            })\n            .catch((err) => {\n                console.log('Edit failed', err)\n            })\n    }\n\n    handleNameChange = (event) => {\n        let text = event.target.value\n        let cloneUser = JSON.parse(JSON.stringify(this.state.user))\n        cloneUser.name = text\n\n        this.setState({\n            user: cloneUser\n        })\n        console.log(this.state.user);\n    }\n\n    handleCurrencyChange = (event) => {\n        let text = event.target.value\n        let cloneUser = JSON.parse(JSON.stringify(this.state.user))\n        cloneUser.currency = text\n\n        this.setState({\n            user: cloneUser\n        })\n        console.log(this.state.user);\n    }\n\n\n\n    render() {\n\n        const { user } = this.props\n\n        if (!user) {\n            return <Redirect to={'/signin'} />\n        }\n\n        return (\n            <div >\n                <Container className=\"formContainer\" >\n                    <Form onSubmit={this.onEdit}>\n                        <Row className=\"formContainer\">\n                            <Col xs={6} md={4}>\n                                {\n                                    user.image ?\n                                        <div>\n\n                                            <img className=\"profileImage\" src={user.image} alt={user.name} />\n                                        </div>\n                                        :\n                                        <Image className=\"profileImage\" src=\"../logokbalance.png\" rounded />\n                                }\n                            </Col>\n                        </Row>\n\n                        <Form.Group className=\"formInput\">\n                            <Form.File variant=\"outline-info\" name=\"image\" type=\"file\" onChange={this.handleImageChange} accept=\"image/png image/jpg image/jpeg\" id=\"exampleFormControlFile1\" />\n                        </Form.Group>\n\n                        <Form.Group className=\"formInput\" controlId=\"formGroupEmail\">\n                            <Form.Label>Username:</Form.Label>\n                            <Form.Control type=\"text\" onChange={this.handleNameChange} value={user.name} />\n                        </Form.Group>\n\n                        <Form.Group className=\"formInput\" as={Col} controlId=\"formGridState\">\n                            <Form.Label>Choose Currency:</Form.Label>\n                            <Form.Control onChange={this.handleCurrencyChange} as=\"select\" defaultValue=\"Choose...\">\n                                <option>euro</option>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <div className=\"formInput\" className=\"buttonProfile\">\n                            <ButtonGroup aria-label=\"Basic example\">\n                                <Button> <Link to=\"/profile\" variant=\"outline-secondary\">Back </Link></Button>\n                                <Button type=\"submit\" variant=\"outline-info\">Save</Button>\n\n                            </ButtonGroup>\n                        </div>\n                    </Form>\n                </Container>\n            </div>\n\n        )\n    }\n}\n\n\nexport default EditProfile;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nclass MyFooter extends Component {\n    render() {\n        return (\n            <footer className=\"MyFooter\">\n                <div>\n                    <div className=\"text-muted\">\n                        <Link to=\"/about\" className=\"text-muted\"><span className=\"text-footer\">About Us</span></Link>\n                        <Link to=\"/about\" className=\"text-muted\"><span className=\"text-footer\">Contact</span></Link>\n                    </div>\n\n                    <div>\n                    {/*social media icons*/}\n                    </div>\n                </div>\n            </footer>\n        )\n    }\n}\n\nexport default MyFooter;","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport config from './config';\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport HomePage from \"./components/HomePage\";\nimport AboutUs from \"./components/AboutUs\";\nimport SignIn from \"./components/users/SignIn\";\nimport SignUp from \"./components/users/SignUp\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Profile from \"./components/users/Profile\";\nimport NotFound from \"./components/404Page/NotFound\";\nimport MyNavbar from \"./components/MyNavbar\";\nimport EditProfile from \"./components/users/EditProfile\";\nimport MyFooter from \"./components/MyFooter\";\n\n\nclass App extends Component {\n  state = {\n    user: null,\n    error: null,\n    fetchingUser: true,\n    dateOfPurchase: \"28-09-1987\",\n  }\n\n  //delete coin from DB and Dashboard\n  handleDelete = (coinName) => {\n\n    axios.delete(`${config.API_URL}/api/coins/delete/${coinName}`, { withCredentials: true })\n      .then(() => {\n        this.props.history.push('/dashboard')\n      })\n      .catch((err) => {\n        console.log('Delete failed', err)\n      })\n\n  }\n\n  //user signup\n  handleSignUp = (e) => {\n    e.preventDefault()\n    const { email, username, password } = e.target\n    let newUser = {\n      email: email.value,\n      username: username.value,\n      password: password.value\n    }\n\n    axios.post(`${config.API_URL}/api/signup`, newUser, { withCredentials: true })\n      .then((response) => {\n        this.setState({\n          user: response.data\n        }, () => {\n          this.props.history.push('/dashboard')\n        })\n      })\n      .catch((errorObj) => {\n        console.log('SignUp failed')\n\n        this.setState({\n          error: errorObj.response.data\n        })\n      })\n  }\n\n  //user signin\n  handleSignIn = async (e) => {\n    e.preventDefault()\n    const { email, password } = e.target\n    let user = {\n      email: email.value,\n      password: password.value\n    }\n\n    axios.post(`${config.API_URL}/api/signin`, user, { withCredentials: true })\n      .then((response) => {\n        this.setState({\n          user: response.data,\n          error: null\n        }, () => {\n          this.props.history.push('/dashboard')\n        })\n      })\n      .catch((errorObj) => {\n        console.log(errorObj)\n        this.setState({\n          error: errorObj.response.data\n        })\n      })\n  }\n\n  //user loggout\n  handleLogout = () => {\n    axios.post(`${config.API_URL}/api/logout`, {}, { withCredentials: true })\n      .then(() => {\n        this.setState({\n          user: null\n        }, () => {\n          this.props.history.push('/')\n        })\n      })\n      .catch((errorObj) => {\n        this.setState({\n          error: errorObj.response.data\n        })\n      })\n  }\n\n  //update state of user for the profile edit\n  updateUser = (user) => {\n    console.log(user);\n    this.setState({\n      user: user\n    }, () => {\n      this.props.history.push('/profile')\n    })\n  }\n\n  componentDidMount() {\n    axios.get(`${config.API_URL}/api/user`, { withCredentials: true })\n      .then((response) => {\n        this.setState({\n          user: response.data,\n          fetchingUser: false,\n        })\n      })\n      .catch((errorObj) => {\n        this.setState({\n          error: errorObj.data,\n          fetchingUser: false,\n        })\n      })\n  }\n\n  render() {\n\n    const { user, error, fetchingUser } = this.state\n\n    if (fetchingUser) {\n      return <p>Loading . . . </p>\n    }\n\n    //routes \n    return (\n      <div>\n        <MyNavbar onSignin={this.handleSignIn} onLogout={this.handleLogout} user={user} />\n\n        <Switch>\n\n          <Route exact path=\"/\" render={() => {\n            return <HomePage />\n          }} />\n\n          <Route exact path=\"/signup\" render={(routeProps) => {\n            return <SignUp error={error} onSubmit={this.handleSignUp} {...routeProps} />\n          }} />\n\n          <Route exact path=\"/signin\" render={(routeProps) => {\n            return <SignIn error={error} onSignIn={this.handleSignIn} {...routeProps} />\n          }} />\n\n          <Route path=\"/about\" render={() => {\n            return <AboutUs />\n          }} />\n\n          <Route exact path=\"/dashboard\" render={() => {\n            return <Dashboard onDelete={this.handleDelete} user={user} />\n          }} />\n\n          <Route exact path=\"/profile\" render={() => {\n            return <Profile user={user} />\n          }} />\n\n          <Route exact path=\"/profile/edit/\" render={(routeProps) => {\n            return <EditProfile updateUser={this.updateUser} user={user} {...routeProps} />\n          }} />\n\n          <Route path=\"/\" component={NotFound} />\n\n        </Switch>\n\n        <MyFooter />\n      </div>\n    )\n\n  }\n\n}\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>  \n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}